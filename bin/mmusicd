#!/bin/bash 

list=~/.listmusic
upcoming=~/.upcomingmusic

fifo=/tmp/mmusic_fifo
stoploop=/tmp/mmusic_stoploop

playing=/tmp/mmusic_playing
pausedfile=/tmp/mmusic_paused

if [ ! -a "$list" ]
then
    touch "$list"
fi

if [ ! -a "$upcoming" ]
then
    touch "$upcoming"
fi

function usage {
    echo "usage:"
    echo "   $0 [options]"
   
    echo "      list - prints the listmusic file"
    echo "      upcoming - print the upcoming file"
    echo "      playing - prints the currently playing song or nothing if not playing"
    
    echo "      add [list/upcoming] file-or-folder-to-add - adds file or contents of folder to list or upcoming"
    
    echo "      pause - pauses playing"
    echo "      paused - echos \"yes\" if paused else \"no\""
    echo "      stop - kills the daemon"
    echo "      skip - skips current song"
    
    echo "      clear - clears the upcoming file"
    echo "      play file - plays file"
}

function play {
    old=`cat "$upcoming"`
    song="$1"
    echo "$song" > /tmp/newup
    if [ ! -z "$old" ]; then
        echo "$old" >> /tmp/newup
    fi
    cat /tmp/newup > "$upcoming"
    rm /tmp/newup
    echo "quit" > "$fifo"
}

function startplaying {
    if [ -a "$fifo" ]
    then
	echo "please kill me first!"
	echo "     thats $0 stop if you forgot"
	exit
    fi

    echo "Starting mmusic"
    
    mkfifo "$fifo"
    
    if [ ! -a "$playing" ]
    then
        touch "$playing"
    fi

    for (( ; ; ))
    do
        song=`cat "$playing"`
        if [ -z "$song" ]
        then
            song=`popupcoming`
        fi

        if [ -z "$song" ]
        then
            song=`getrandom`
        fi

        echo "$song" > "$playing"
	    mpv --audio-display=no -really-quiet -input-file="$fifo" "$song"
        cat /dev/null > "$playing" 

        if [ -a "$stoploop" ]
        then
            break
        fi

        sleep 0.5
    done
    
    rm "$playing"
    rm "$fifo"

    if [ -a "$pausedfile" ]
    then
        rm "$pausedfile"
    fi
}

function popupcoming {
    next=`cat "$upcoming" | head -1`
    echo "$next"

    tail -n +2 "$upcoming" > /tmp/tmpupcoming
    cat /tmp/tmpupcoming > "$upcoming"
    rm /tmp/tmpupcoming
}

function getrandom {
    RAND=`od -d -N2 -An /dev/urandom`
    LINES=`cat "$list" | wc -l`
    N=$(( RAND % LINES + 1 ))
    LINE=`head -$N $list | tail -1`
    echo "$LINE"
}

function skip {
    echo "quit" > "$fifo"
}

function exitd {
    touch "$stoploop"

    echo "quit" > "$fifo"
    
    if [ -n "$2" ]
    then
        sleep $(($2 - 0.5))
    fi

    sleep 0.5

    if [ -a "$fifo" ] 
    then 
        rm "$fifo"
    fi

    rm "$stoploop"
}

function sortlist {
    sort -f "$list" | uniq > "/tmp/sorting"
    cat "/tmp/sorting" > "$list"
    rm "/tmp/sorting"
}

function add {
    if [ -z "$2" ]
    then
	for (( ; ; ))
	do
	    read adding
	    if [ -z "$adding" ]
	    then
		return;
	    fi
	    add "$1" "$adding"
	done
    fi

    if [ "$1" == "list" ]
    then
	file="$list"
	pos="end"
    elif [ "$1" == "upcoming" ]
    then
	file="$upcoming"
	pos="end"
    elif [ "$1" == "next" ]
    then
	file="$upcoming"
	pos="start"
    else
	echo "What list am I adding to?"
	return
    fi

    tmpname="mmusic_add_tmp"
    suffix=`find /tmp/ -maxdepth 1 -name "$tmpname*" | wc -l`
    tmp1="/tmp/$tmpname$suffix"
    tmp2="/tmp/$tmpname$(( $suffix + 1 ))"

    touch "$tmp1"

    for f in "${@:2}"
    do
#	echo "got $f"
	if [ -d "$f" ]
	then
	    current=`pwd`
	    cd "$f"
	    find "$PWD/"* -name "*" | add "$1"
	    cd "$current"
#	    ls -bxd "$f"/* | add "$1"
	elif [ -a "$f" ]
	then
	    echo "$f" >> "$tmp1"
	    echo "added $f"
	else
	    echo "No such file $f"
	fi
    done

    if [ "$pos" == "start" ]
    then
	cat "$tmp1" > "$tmp2"
	cat "$file" >> "$tmp2"
    elif [ "$pos" == "end" ]
    then
	cat "$file" > "$tmp2"
	cat "$tmp1" >> "$tmp2"
    fi

    cat "$tmp2" > "$file"

    rm "$tmp1" "$tmp2"

    if [ "$1" == "list" ]
    then
	sortlist
    fi
}

function remove {
    cat "$1" | grep -v "$2" > /tmp/newfile
    cat /tmp/newfile > "$1"
    rm /tmp/newfile
}

if [ -z "$1" ]
then
    startplaying &
fi

if [ "$1" == "play" ]
then
    play "$2"
fi

if [ "$1" == "clear" ]
then
    rm "$upcoming"
    touch "$upcoming"
fi

if [ "$1" == "skip" ]
then
    skip
fi

if [ "$1" == "stop" ]
then
    exitd 
fi

if [ "$1" == "add" ]
then 
    add "${@:2}"
fi

if [ "$1" == "playing" ]
then
    cat "$playing"
fi

if [ "$1" == "upcomingfile" ]
then
    cat "$upcoming"
fi

if [ "$1" == "listfile" ]
then
    cat "$list"
fi

if [ "$1" == "pause" ]
then
    echo "pause" > "$fifo"
    if [ -a "$pausedfile" ]
    then
        rm "$pausedfile"
    else
        echo "yes" > "$pausedfile"
    fi
fi

if [ "$1" == "paused" ]
then
    if [ -a "$pausedfile" ]
        cat "$pausedfile"
    else
        echo "no"
    fi
fi

if [ "$1" == "remove" ]
then
    file="$upcoming"
    if [ "$2" == "list" ]
    then
        file="$list"
    fi
    
    for arg in "${@:3}"
    do
        remove "$file" "$arg"
    done
fi

if [ "$1" == "--help" -o "$1" == "-h" ]
then
    usage
fi
